%global __brp_check_rpaths %{nil}
%global __requires_exclude ^libmpi
%global packname  IOHanalyzer
%global packver   0.1.8.2
%global rlibdir   /usr/local/lib/R/library

Name:             R-CRAN-%{packname}
Version:          0.1.8.2
Release:          1%{?dist}%{?buildtag}
Summary:          Data Analysis Part of 'IOHprofiler'

License:          BSD_3_clause + file LICENSE
URL:              https://cran.r-project.org/package=%{packname}
Source0:          %{url}&version=%{packver}#/%{packname}_%{packver}.tar.gz


BuildRequires:    R-devel >= 2.10
Requires:         R-core >= 2.10
BuildRequires:    R-CRAN-magrittr 
BuildRequires:    R-CRAN-dplyr 
BuildRequires:    R-CRAN-data.table 
BuildRequires:    R-CRAN-ggplot2 
BuildRequires:    R-CRAN-plotly 
BuildRequires:    R-CRAN-colorspace 
BuildRequires:    R-CRAN-colorRamps 
BuildRequires:    R-CRAN-RColorBrewer 
BuildRequires:    R-CRAN-shiny 
BuildRequires:    R-CRAN-reshape2 
BuildRequires:    R-CRAN-stringi 
BuildRequires:    R-CRAN-httr 
BuildRequires:    R-CRAN-knitr 
BuildRequires:    R-methods 
BuildRequires:    R-CRAN-rjson 
BuildRequires:    R-CRAN-eaf 
BuildRequires:    R-CRAN-viridis 
BuildRequires:    R-CRAN-Rcpp 
Requires:         R-CRAN-magrittr 
Requires:         R-CRAN-dplyr 
Requires:         R-CRAN-data.table 
Requires:         R-CRAN-ggplot2 
Requires:         R-CRAN-plotly 
Requires:         R-CRAN-colorspace 
Requires:         R-CRAN-colorRamps 
Requires:         R-CRAN-RColorBrewer 
Requires:         R-CRAN-shiny 
Requires:         R-CRAN-reshape2 
Requires:         R-CRAN-stringi 
Requires:         R-CRAN-httr 
Requires:         R-CRAN-knitr 
Requires:         R-methods 
Requires:         R-CRAN-rjson 
Requires:         R-CRAN-eaf 
Requires:         R-CRAN-viridis 

%description
The data analysis module for the Iterative Optimization Heuristics
Profiler ('IOHprofiler'). This module provides statistical analysis
methods for the benchmark data generated by optimization heuristics, which
can be visualized through a web-based interface. The benchmark data is
usually generated by the experimentation module, called 'IOHexperimenter'.
'IOHanalyzer' also supports the widely used 'COCO' (Comparing Continuous
Optimisers) data format for benchmarking.

%prep
%setup -q -c -n %{packname}

# fix end of executable files
find -type f -executable -exec grep -Iq . {} \; -exec sed -i -e '$a\' {} \;
# prevent binary stripping
[ -d %{packname}/src ] && find %{packname}/src -type f -exec \
  sed -i 's@/usr/bin/strip@/usr/bin/true@g' {} \; || true
[ -d %{packname}/src ] && find %{packname}/src/Make* -type f -exec \
  sed -i 's@-g0@@g' {} \; || true
# don't allow local prefix in executable scripts
find -type f -executable -exec sed -Ei 's@#!( )*/usr/local/bin@#!/usr/bin@g' {} \;

%build

%install

mkdir -p %{buildroot}%{rlibdir}
%{_bindir}/R CMD INSTALL -l %{buildroot}%{rlibdir} %{packname}
test -d %{packname}/src && (cd %{packname}/src; rm -f *.o *.so)
rm -f %{buildroot}%{rlibdir}/R.css
# remove buildroot from installed files
find %{buildroot}%{rlibdir} -type f -exec sed -i "s@%{buildroot}@@g" {} \;

%files
%{rlibdir}/%{packname}
